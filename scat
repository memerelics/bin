#!/bin/bash

function usage() {
  echo "usage: scat {up,list/ls,ssh,kill,killall}"
  exit 1
}

KEYPATH=~/.ssh/ec2-key.pem
while getopts i: OPT; do
  case $OPT in
    i)
      KEYPATH="$OPTARG"
      ;;
  esac
done

# remove used option strings from args
shift $(($OPTIND -1))

case $1 in
  up)
    keyfile=`basename $KEYPATH`
    keyname="${keyfile%.*}"
    resp=`aws ec2 run-instances --region ap-northeast-1 \
      --image-id ami-cbf90ecb \
      --instance-type t2.micro \
      --key-name $keyname`
    instanceId=`echo $resp | jq -r '.Instances[].InstanceId'`
    aws ec2 create-tags --resources $instanceId --tags Key=Name,Value=`date +'scat-%Y%m%d-%H:%M'`
    ;;
  list|ls)
    aws ec2 describe-instances --output text \
      --filters "Name=tag:Name,Values=scat*" \
      --query "Reservations[].Instances[].[State.Name,InstanceId,PublicIpAddress,LaunchTime]"
    ;;
  ssh)
    # ssh to latest scat
    ip=`aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=tag:Name,Values=scat*" \
                                   --query 'Reservations[*].Instances[*].[PublicIpAddress,InstanceId,LaunchTime]' --output text \
                                   | sort -r -k 2 | head -n 1 | cut -f 1`
    ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i $KEYPATH ec2-user@$ip 2>/dev/null
    ;;
  kill|killall)
    instances=`aws ec2 describe-instances --filters "Name=tag:Name,Values=scat*" | jq -r '.Reservations[].Instances[].InstanceId'`
    aws ec2 terminate-instances --instance-ids $instances
    ;;
  *)
    usage
esac
